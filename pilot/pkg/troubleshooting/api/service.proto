
syntax = "proto3";

package api;


option go_package = "api";


service MeshTroubleshootingService{
  rpc GetConfigDump(GetConfigDumpRequest)
    returns(stream GetConfigDumpResponse){
  }
}

service ProxyTroubleshootingService {
  rpc Troubleshoot(stream TroubleShootingResponse)
      returns(stream TroubleShootingRequest) {}
}

// Fake one.
message Selector {
  string id_prefix = 1;
}

message GetConfigDumpRequest{
  Selector selector = 1;
  // serving as a tracing debugging field, most time request id is auto generated.
  // we can't use metadata due to our setup of the server/agent using one stream per lifetime.
  // therefore, using a special nuance field for debugging purpose.
  string request_id = 2;
}

message GetConfigDumpResponse{
  string payload = 1;
}

message TroubleShootingResponse{
  string request_id = 1;
  string payload = 2;
}

message TroubleShootingRequest{
  string request_id = 1;
}